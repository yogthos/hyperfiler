declare const _default: "\n/* \n * flowplayer.js 3.2.6. The Flowplayer API\n * \n * Copyright 2009-2011 Flowplayer Oy\n * \n * This file is part of Flowplayer.\n * \n * Flowplayer is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * Flowplayer is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with Flowplayer.  If not, see <http://www.gnu.org/licenses/>.\n * \n * Date: 2011-02-04 05:45:28 -0500 (Fri, 04 Feb 2011)\n * Revision: 614 \n */\n(function(){function g(o){console.log(\"$f.fireEvent\",[].slice.call(o))}function k(q){if(!q||typeof q!=\"object\"){return q}var o=new q.constructor();for(var p in q){if(q.hasOwnProperty(p)){o[p]=k(q[p])}}return o}function m(t,q){if(!t){return}var o,p=0,r=t.length;if(r===undefined){for(o in t){if(q.call(t[o],o,t[o])===false){break}}}else{for(var s=t[0];p<r&&q.call(s,p,s)!==false;s=t[++p]){}}return t}function c(o){return document.getElementById(o)}function i(q,p,o){if(typeof p!=\"object\"){return q}if(q&&p){m(p,function(r,s){if(!o||typeof s!=\"function\"){q[r]=s}})}return q}function n(s){var q=s.indexOf(\".\");if(q!=-1){var p=s.slice(0,q)||\"*\";var o=s.slice(q+1,s.length);var r=[];m(document.getElementsByTagName(p),function(){if(this.className&&this.className.indexOf(o)!=-1){r.push(this)}});return r}}function f(o){o=o||window.event;if(o.preventDefault){o.stopPropagation();o.preventDefault()}else{o.returnValue=false;o.cancelBubble=true}return false}function j(q,o,p){q[o]=q[o]||[];q[o].push(p)}function e(){return\"_\"+(\"\"+Math.random()).slice(2,10)}var h=function(t,r,s){var q=this,p={},u={};q.index=r;if(typeof t==\"string\"){t={url:t}}i(this,t,true);m((\"Begin*,Start,Pause*,Resume*,Seek*,Stop*,Finish*,LastSecond,Update,BufferFull,BufferEmpty,BufferStop\").split(\",\"),function(){var v=\"on\"+this;if(v.indexOf(\"*\")!=-1){v=v.slice(0,v.length-1);var w=\"onBefore\"+v.slice(2);q[w]=function(x){j(u,w,x);return q}}q[v]=function(x){j(u,v,x);return q};if(r==-1){if(q[w]){s[w]=q[w]}if(q[v]){s[v]=q[v]}}});i(this,{onCuepoint:function(x,w){if(arguments.length==1){p.embedded=[null,x];return q}if(typeof x==\"number\"){x=[x]}var v=e();p[v]=[x,w];if(s.isLoaded()){s._api().fp_addCuepoints(x,r,v)}return q},update:function(w){i(q,w);if(s.isLoaded()){s._api().fp_updateClip(w,r)}var v=s.getConfig();var x=(r==-1)?v.clip:v.playlist[r];i(x,w,true)},_fireEvent:function(v,y,w,A){if(v==\"onLoad\"){m(p,function(B,C){if(C[0]){s._api().fp_addCuepoints(C[0],r,B)}});return false}A=A||q;if(v==\"onCuepoint\"){var z=p[y];if(z){return z[1].call(s,A,w)}}if(y&&\"onBeforeBegin,onMetaData,onStart,onUpdate,onResume\".indexOf(v)!=-1){i(A,y);if(y.metaData){if(!A.duration){A.duration=y.metaData.duration}else{A.fullDuration=y.metaData.duration}}}var x=true;m(u[v],function(){x=this.call(s,A,y,w)});return x}});if(t.onCuepoint){var o=t.onCuepoint;q.onCuepoint.apply(q,typeof o==\"function\"?[o]:o);delete t.onCuepoint}m(t,function(v,w){if(typeof w==\"function\"){j(u,v,w);delete t[v]}});if(r==-1){s.onCuepoint=this.onCuepoint}};var l=function(p,r,q,t){var o=this,s={},u=false;if(t){i(s,t)}m(r,function(v,w){if(typeof w==\"function\"){s[v]=w;delete r[v]}});i(this,{animate:function(y,z,x){if(!y){return o}if(typeof z==\"function\"){x=z;z=500}if(typeof y==\"string\"){var w=y;y={};y[w]=z;z=500}if(x){var v=e();s[v]=x}if(z===undefined){z=500}r=q._api().fp_animate(p,y,z,v);return o},css:function(w,x){if(x!==undefined){var v={};v[w]=x;w=v}r=q._api().fp_css(p,w);i(o,r);return o},show:function(){this.display=\"block\";q._api().fp_showPlugin(p);return o},hide:function(){this.display=\"none\";q._api().fp_hidePlugin(p);return o},toggle:function(){this.display=q._api().fp_togglePlugin(p);return o},fadeTo:function(y,x,w){if(typeof x==\"function\"){w=x;x=500}if(w){var v=e();s[v]=w}this.display=q._api().fp_fadeTo(p,y,x,v);this.opacity=y;return o},fadeIn:function(w,v){return o.fadeTo(1,w,v)},fadeOut:function(w,v){return o.fadeTo(0,w,v)},getName:function(){return p},getPlayer:function(){return q},_fireEvent:function(w,v,x){if(w==\"onUpdate\"){var z=q._api().fp_getPlugin(p);if(!z){return}i(o,z);delete o.methods;if(!u){m(z.methods,function(){var B=\"\"+this;o[B]=function(){var C=[].slice.call(arguments);var D=q._api().fp_invoke(p,B,C);return D===\"undefined\"||D===undefined?o:D}});u=true}}var A=s[w];if(A){var y=A.apply(o,v);if(w.slice(0,1)==\"_\"){delete s[w]}return y}return o}})};function b(q,G,t){var w=this,v=null,D=false,u,s,F=[],y={},x={},E,r,p,C,o,A;i(w,{id:function(){return E},isLoaded:function(){return(v!==null&&v.fp_play!==undefined&&!D)},getParent:function(){return q},hide:function(H){if(H){q.style.height=\"0px\"}if(w.isLoaded()){v.style.height=\"0px\"}return w},show:function(){q.style.height=A+\"px\";if(w.isLoaded()){v.style.height=o+\"px\"}return w},isHidden:function(){return w.isLoaded()&&parseInt(v.style.height,10)===0},load:function(J){if(!w.isLoaded()&&w._fireEvent(\"onBeforeLoad\")!==false){var H=function(){u=q.innerHTML;if(u&&!flashembed.isSupported(G.version)){q.innerHTML=\"\"}if(J){J.cached=true;j(x,\"onLoad\",J)}flashembed(q,G,{config:t})};var I=0;m(a,function(){this.unload(function(K){if(++I==a.length){H()}})})}return w},unload:function(J){if(this.isFullscreen()&&/WebKit/i.test(navigator.userAgent)){if(J){J(false)}return w}if(u.replace(/\\s/g,\"\")!==\"\"){if(w._fireEvent(\"onBeforeUnload\")===false){if(J){J(false)}return w}D=true;try{if(v){v.fp_close();w._fireEvent(\"onUnload\")}}catch(H){}var I=function(){v=null;q.innerHTML=u;D=false;if(J){J(true)}};setTimeout(I,50)}else{if(J){J(false)}}return w},getClip:function(H){if(H===undefined){H=C}return F[H]},getCommonClip:function(){return s},getPlaylist:function(){return F},getPlugin:function(H){var J=y[H];if(!J&&w.isLoaded()){var I=w._api().fp_getPlugin(H);if(I){J=new l(H,I,w);y[H]=J}}return J},getScreen:function(){return w.getPlugin(\"screen\")},getControls:function(){return w.getPlugin(\"controls\")._fireEvent(\"onUpdate\")},getLogo:function(){try{return w.getPlugin(\"logo\")._fireEvent(\"onUpdate\")}catch(H){}},getPlay:function(){return w.getPlugin(\"play\")._fireEvent(\"onUpdate\")},getConfig:function(H){return H?k(t):t},getFlashParams:function(){return G},loadPlugin:function(K,J,M,L){if(typeof M==\"function\"){L=M;M={}}var I=L?e():\"_\";w._api().fp_loadPlugin(K,J,M,I);var H={};H[I]=L;var N=new l(K,null,w,H);y[K]=N;return N},getState:function(){return w.isLoaded()?v.fp_getState():-1},play:function(I,H){var J=function(){if(I!==undefined){w._api().fp_play(I,H)}else{w._api().fp_play()}};if(w.isLoaded()){J()}else{if(D){setTimeout(function(){w.play(I,H)},50)}else{w.load(function(){J()})}}return w},getVersion:function(){var I=\"flowplayer.js 3.2.6\";if(w.isLoaded()){var H=v.fp_getVersion();H.push(I);return H}return I},_api:function(){if(!w.isLoaded()){throw\"Flowplayer \"+w.id()+\" not loaded when calling an API method\"}return v},setClip:function(H){w.setPlaylist([H]);return w},getIndex:function(){return p},_swfHeight:function(){return v.clientHeight}});m((\"Click*,Load*,Unload*,Keypress*,Volume*,Mute*,Unmute*,PlaylistReplace,ClipAdd,Fullscreen*,FullscreenExit,Error,MouseOver,MouseOut\").split(\",\"),function(){var H=\"on\"+this;if(H.indexOf(\"*\")!=-1){H=H.slice(0,H.length-1);var I=\"onBefore\"+H.slice(2);w[I]=function(J){j(x,I,J);return w}}w[H]=function(J){j(x,H,J);return w}});m((\"pause,resume,mute,unmute,stop,toggle,seek,getStatus,getVolume,setVolume,getTime,isPaused,isPlaying,startBuffering,stopBuffering,isFullscreen,toggleFullscreen,reset,close,setPlaylist,addClip,playFeed,setKeyboardShortcutsEnabled,isKeyboardShortcutsEnabled\").split(\",\"),function(){var H=this;w[H]=function(J,I){if(!w.isLoaded()){return w}var K=null;if(J!==undefined&&I!==undefined){K=v[\"fp_\"+H](J,I)}else{K=(J===undefined)?v[\"fp_\"+H]():v[\"fp_\"+H](J)}return K===\"undefined\"||K===undefined?w:K}});w._fireEvent=function(Q){if(typeof Q==\"string\"){Q=[Q]}var R=Q[0],O=Q[1],M=Q[2],L=Q[3],K=0;if(t.debug){g(Q)}if(!w.isLoaded()&&R==\"onLoad\"&&O==\"player\"){v=v||c(r);o=w._swfHeight();m(F,function(){this._fireEvent(\"onLoad\")});m(y,function(S,T){T._fireEvent(\"onUpdate\")});s._fireEvent(\"onLoad\")}if(R==\"onLoad\"&&O!=\"player\"){return}if(R==\"onError\"){if(typeof O==\"string\"||(typeof O==\"number\"&&typeof M==\"number\")){O=M;M=L}}if(R==\"onContextMenu\"){m(t.contextMenu[O],function(S,T){T.call(w)});return}if(R==\"onPluginEvent\"||R==\"onBeforePluginEvent\"){var H=O.name||O;var I=y[H];if(I){I._fireEvent(\"onUpdate\",O);return I._fireEvent(M,Q.slice(3))}return}if(R==\"onPlaylistReplace\"){F=[];var N=0;m(O,function(){F.push(new h(this,N++,w))})}if(R==\"onClipAdd\"){if(O.isInStream){return}O=new h(O,M,w);F.splice(M,0,O);for(K=M+1;K<F.length;K++){F[K].index++}}var P=true;if(typeof O==\"number\"&&O<F.length){C=O;var J=F[O];if(J){P=J._fireEvent(R,M,L)}if(!J||P!==false){P=s._fireEvent(R,M,L,J)}}m(x[R],function(){P=this.call(w,O,M);if(this.cached){x[R].splice(K,1)}if(P===false){return false}K++});return P};function B(){if($f(q)){$f(q).getParent().innerHTML=\"\";p=$f(q).getIndex();a[p]=w}else{a.push(w);p=a.length-1}A=parseInt(q.style.height,10)||q.clientHeight;E=q.id||\"fp\"+e();r=G.id||E+\"_api\";G.id=r;t.playerId=E;if(typeof t==\"string\"){t={clip:{url:t}}}if(typeof t.clip==\"string\"){t.clip={url:t.clip}}t.clip=t.clip||{};if(q.getAttribute(\"href\",2)&&!t.clip.url){t.clip.url=q.getAttribute(\"href\",2)}s=new h(t.clip,-1,w);t.playlist=t.playlist||[t.clip];var I=0;m(t.playlist,function(){var K=this;if(typeof K==\"object\"&&K.length){K={url:\"\"+K}}m(t.clip,function(L,M){if(M!==undefined&&K[L]===undefined&&typeof M!=\"function\"){K[L]=M}});t.playlist[I]=K;K=new h(K,I,w);F.push(K);I++});m(t,function(K,L){if(typeof L==\"function\"){if(s[K]){s[K](L)}else{j(x,K,L)}delete t[K]}});m(t.plugins,function(K,L){if(L){y[K]=new l(K,L,w)}});if(!t.plugins||t.plugins.controls===undefined){y.controls=new l(\"controls\",null,w)}y.canvas=new l(\"canvas\",null,w);u=q.innerHTML;function J(L){var K=w.hasiPadSupport&&w.hasiPadSupport();if(/iPad|iPhone|iPod/i.test(navigator.userAgent)&&!/.flv$/i.test(F[0].url)&&!K){return true}if(!w.isLoaded()&&w._fireEvent(\"onBeforeClick\")!==false){w.load()}return f(L)}function H(){if(u.replace(/\\s/g,\"\")!==\"\"){if(q.addEventListener){q.addEventListener(\"click\",J,false)}else{if(q.attachEvent){q.attachEvent(\"onclick\",J)}}}else{if(q.addEventListener){q.addEventListener(\"click\",f,false)}w.load()}}setTimeout(H,0)}if(typeof q==\"string\"){var z=c(q);if(!z){throw\"Flowplayer cannot access element: \"+q}q=z;B()}else{B()}}var a=[];function d(o){this.length=o.length;this.each=function(p){m(o,p)};this.size=function(){return o.length}}window.flowplayer=window.$f=function(){var p=null;var o=arguments[0];if(!arguments.length){m(a,function(){if(this.isLoaded()){p=this;return false}});return p||a[0]}if(arguments.length==1){if(typeof o==\"number\"){return a[o]}else{if(o==\"*\"){return new d(a)}m(a,function(){if(this.id()==o.id||this.id()==o||this.getParent()==o){p=this;return false}});return p}}if(arguments.length>1){var t=arguments[1],q=(arguments.length==3)?arguments[2]:{};if(typeof t==\"string\"){t={src:t}}t=i({bgcolor:\"#000000\",version:[9,0],expressInstall:\"http://static.flowplayer.org/swf/expressinstall.swf\",cachebusting:false},t);if(typeof o==\"string\"){if(o.indexOf(\".\")!=-1){var s=[];m(n(o),function(){s.push(new b(this,k(t),k(q)))});return new d(s)}else{var r=c(o);return new b(r!==null?r:o,t,q)}}else{if(o){return new b(o,t,q)}}}return null};i(window.$f,{fireEvent:function(){var o=[].slice.call(arguments);var q=$f(o[0]);return q?q._fireEvent(o.slice(1)):null},addPlugin:function(o,p){b.prototype[o]=p;return $f},each:m,extend:i});if(typeof jQuery==\"function\"){jQuery.fn.flowplayer=function(q,p){if(!arguments.length||typeof arguments[0]==\"number\"){var o=[];this.each(function(){var r=$f(this);if(r){o.push(r)}});return arguments.length?o[arguments[0]]:new d(o)}return this.each(function(){$f(this,k(q),p?k(p):{})})}}})();(function(){var e=typeof jQuery==\"function\";var i={width:\"100%\",height:\"100%\",allowfullscreen:true,allowscriptaccess:\"always\",quality:\"high\",version:null,onFail:null,expressInstall:null,w3c:false,cachebusting:false};if(e){jQuery.tools=jQuery.tools||{};jQuery.tools.flashembed={version:\"1.0.4\",conf:i}}function j(){if(c.done){return false}var l=document;if(l&&l.getElementsByTagName&&l.getElementById&&l.body){clearInterval(c.timer);c.timer=null;for(var k=0;k<c.ready.length;k++){c.ready[k].call()}c.ready=null;c.done=true}}var c=e?jQuery:function(k){if(c.done){return k()}if(c.timer){c.ready.push(k)}else{c.ready=[k];c.timer=setInterval(j,13)}};function f(l,k){if(k){for(key in k){if(k.hasOwnProperty(key)){l[key]=k[key]}}}return l}function g(k){switch(h(k)){case\"string\":k=k.replace(new RegExp('([\"\\\\\\\\])',\"g\"),\"\\\\$1\");k=k.replace(/^\\s?(\\d+)%/,\"$1pct\");return'\"'+k+'\"';case\"array\":return\"[\"+b(k,function(n){return g(n)}).join(\",\")+\"]\";case\"function\":return'\"function()\"';case\"object\":var l=[];for(var m in k){if(k.hasOwnProperty(m)){l.push('\"'+m+'\":'+g(k[m]))}}return\"{\"+l.join(\",\")+\"}\"}return String(k).replace(/\\s/g,\" \").replace(/\\'/g,'\"')}function h(l){if(l===null||l===undefined){return false}var k=typeof l;return(k==\"object\"&&l.push)?\"array\":k}if(window.attachEvent){window.attachEvent(\"onbeforeunload\",function(){__flash_unloadHandler=function(){};__flash_savedUnloadHandler=function(){}})}function b(k,n){var m=[];for(var l in k){if(k.hasOwnProperty(l)){m[l]=n(k[l])}}return m}function a(r,t){var q=f({},r);var s=document.all;var n='<object width=\"'+q.width+'\" height=\"'+q.height+'\"';if(s&&!q.id){q.id=\"_\"+(\"\"+Math.random()).substring(9)}if(q.id){n+=' id=\"'+q.id+'\"'}if(q.cachebusting){q.src+=((q.src.indexOf(\"?\")!=-1?\"&\":\"?\")+Math.random())}if(q.w3c||!s){n+=' data=\"'+q.src+'\" type=\"application/x-shockwave-flash\"'}else{n+=' classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"'}n+=\">\";if(q.w3c||s){n+='<param name=\"movie\" value=\"'+q.src+'\" />'}q.width=q.height=q.id=q.w3c=q.src=null;for(var l in q){if(q[l]!==null){n+='<param name=\"'+l+'\" value=\"'+q[l]+'\" />'}}var o=\"\";if(t){for(var m in t){if(t[m]!==null){o+=m+\"=\"+(typeof t[m]==\"object\"?g(t[m]):t[m])+\"&\"}}o=o.substring(0,o.length-1);n+='<param name=\"flashvars\" value=\\''+o+\"' />\"}n+=\"</object>\";return n}function d(m,p,l){var k=flashembed.getVersion();f(this,{getContainer:function(){return m},getConf:function(){return p},getVersion:function(){return k},getFlashvars:function(){return l},getApi:function(){return m.firstChild},getHTML:function(){return a(p,l)}});var q=p.version;var r=p.expressInstall;var o=!q||flashembed.isSupported(q);if(o){p.onFail=p.version=p.expressInstall=null;m.innerHTML=a(p,l)}else{if(q&&r&&flashembed.isSupported([6,65])){f(p,{src:r});l={MMredirectURL:location.href,MMplayerType:\"PlugIn\",MMdoctitle:document.title};m.innerHTML=a(p,l)}else{if(m.innerHTML.replace(/\\s/g,\"\")!==\"\"){}else{m.innerHTML=\"<h2>Flash version \"+q+\" or greater is required</h2><h3>\"+(k[0]>0?\"Your version is \"+k:\"You have no flash plugin installed\")+\"</h3>\"+(m.tagName==\"A\"?\"<p>Click here to download latest version</p>\":\"<p>Download latest version from <a href='http://www.adobe.com/go/getflashplayer'>here</a></p>\");if(m.tagName==\"A\"){m.onclick=function(){location.href=\"http://www.adobe.com/go/getflashplayer\"}}}}}if(!o&&p.onFail){var n=p.onFail.call(this);if(typeof n==\"string\"){m.innerHTML=n}}if(document.all){window[p.id]=document.getElementById(p.id)}}window.flashembed=function(l,m,k){if(typeof l==\"string\"){var n=document.getElementById(l);if(n){l=n}else{c(function(){flashembed(l,m,k)});return}}if(!l){return}if(typeof m==\"string\"){m={src:m}}var o=f({},i);f(o,m);return new d(l,o,k)};f(window.flashembed,{getVersion:function(){var m=[0,0];if(navigator.plugins&&typeof navigator.plugins[\"Shockwave Flash\"]==\"object\"){var l=navigator.plugins[\"Shockwave Flash\"].description;if(typeof l!=\"undefined\"){l=l.replace(/^.*\\s+(\\S+\\s+\\S+$)/,\"$1\");var n=parseInt(l.replace(/^(.*)\\..*$/,\"$1\"),10);var r=/r/.test(l)?parseInt(l.replace(/^.*r(.*)$/,\"$1\"),10):0;m=[n,r]}}else{if(window.ActiveXObject){try{var p=new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash.7\")}catch(q){try{p=new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash.6\");m=[6,0];p.AllowScriptAccess=\"always\"}catch(k){if(m[0]==6){return m}}try{p=new ActiveXObject(\"ShockwaveFlash.ShockwaveFlash\")}catch(o){}}if(typeof p==\"object\"){l=p.GetVariable(\"$version\");if(typeof l!=\"undefined\"){l=l.replace(/^\\S+\\s+(.*)$/,\"$1\").split(\",\");m=[parseInt(l[0],10),parseInt(l[2],10)]}}}}return m},isSupported:function(k){var m=flashembed.getVersion();var l=(m[0]>k[0])||(m[0]==k[0]&&m[1]>=k[1]);return l},domReady:c,asString:g,getHTML:a});if(e){jQuery.fn.flashembed=function(l,k){var m=null;this.each(function(){m=flashembed(this,l,k)});return l.api===false?this:m}}})();\n(function(){\n\n    var DomReady = window.DomReady = {};\n\n    // Everything that has to do with properly supporting our document ready event. Brought over from the most awesome jQuery. \n\n    var userAgent = navigator.userAgent.toLowerCase();\n\n    // Figure out what browser is being used\n    var browser = {\n        version: (userAgent.match( /.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/ ) || [])[1],\n        safari: /webkit/.test(userAgent),\n        opera: /opera/.test(userAgent),\n        msie: (/msie/.test(userAgent)) && (!/opera/.test( userAgent )),\n        mozilla: (/mozilla/.test(userAgent)) && (!/(compatible|webkit)/.test(userAgent))\n    };    \n\n    var readyBound = false;    \n    var isReady = false;\n    var readyList = [];\n\n    // Handle when the DOM is ready\n    function domReady() {\n        // Make sure that the DOM is not already loaded\n        if(!isReady) {\n            // Remember that the DOM is ready\n            isReady = true;\n        \n            if(readyList) {\n                for(var fn = 0; fn < readyList.length; fn++) {\n                    readyList[fn].call(window, []);\n                }\n            \n                readyList = [];\n            }\n        }\n    };\n\n    // From Simon Willison. A safe way to fire onload w/o screwing up everyone else.\n    function addLoadEvent(func) {\n      var oldonload = window.onload;\n      if (typeof window.onload != 'function') {\n        window.onload = func;\n      } else {\n        window.onload = function() {\n          if (oldonload) {\n            oldonload();\n          }\n          func();\n        }\n      }\n    };\n\n    // does the heavy work of working through the browsers idiosyncracies (let's call them that) to hook onload.\n    function bindReady() {\n        if(readyBound) {\n            return;\n        }\n    \n        readyBound = true;\n\n        // Mozilla, Opera (see further below for it) and webkit nightlies currently support this event\n        if (document.addEventListener && !browser.opera) {\n            // Use the handy event callback\n            document.addEventListener(\"DOMContentLoaded\", domReady, false);\n        }\n\n        // If IE is used and is not in a frame\n        // Continually check to see if the document is ready\n        if (browser.msie && window == top) (function(){\n            if (isReady) return;\n            try {\n                // If IE is used, use the trick by Diego Perini\n                // http://javascript.nwbox.com/IEContentLoaded/\n                document.documentElement.doScroll(\"left\");\n            } catch(error) {\n                setTimeout(arguments.callee, 0);\n                return;\n            }\n            // and execute any waiting functions\n            domReady();\n        })();\n\n        if(browser.opera) {\n            document.addEventListener( \"DOMContentLoaded\", function () {\n                if (isReady) return;\n                for (var i = 0; i < document.styleSheets.length; i++)\n                    if (document.styleSheets[i].disabled) {\n                        setTimeout( arguments.callee, 0 );\n                        return;\n                    }\n                // and execute any waiting functions\n                domReady();\n            }, false);\n        }\n\n        if(browser.safari) {\n            var numStyles;\n            (function(){\n                if (isReady) return;\n                if (document.readyState != \"loaded\" && document.readyState != \"complete\") {\n                    setTimeout( arguments.callee, 0 );\n                    return;\n                }\n                if (numStyles === undefined) {\n                    var links = document.getElementsByTagName(\"link\");\n                    for (var i=0; i < links.length; i++) {\n                        if(links[i].getAttribute('rel') == 'stylesheet') {\n                            numStyles++;\n                        }\n                    }\n                    var styles = document.getElementsByTagName(\"style\");\n                    numStyles += styles.length;\n                }\n                if (document.styleSheets.length != numStyles) {\n                    setTimeout( arguments.callee, 0 );\n                    return;\n                }\n            \n                // and execute any waiting functions\n                domReady();\n            })();\n        }\n\n        // A fallback to window.onload, that will always work\n        addLoadEvent(domReady);\n    };\n\n    // This is the public function that people can use to hook up ready.\n    DomReady.ready = function(fn, args) {\n        // Attach the listeners\n        bindReady();\n    \n        // If the DOM is already ready\n        if (isReady) {\n            // Execute the function immediately\n            fn.call(window, []);\n        } else {\n            // Add the function to the wait list\n            readyList.push( function() { return fn.call(window, []); } );\n        }\n    };\n    \n    bindReady();\n    \n})();\n/*\n * HTML 5 media compatibility layer.\n * \n * Copyright 2010 Dave Hall <dave@etianen.com>.\n * \n * This script is part of the html5media project. The html5media project enables\n * HTML5 video and audio tags in all major browsers.\n * \n * The html5media project is free software: you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.\n * \n * The html5media project is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n * Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with html5media.  If not, see<http://www.gnu.org/licenses/>.\n * \n * Developed by Dave Hall.\n * \n * <http://www.etianen.com/>\n */\n\n\n(function(window, document, undefined) {    \n    \n    \"use strict\";\n\n    // Tagnames for the different types of media tag.\n    var VIDEO_TAG = \"video\";\n    var AUDIO_TAG = \"audio\";\n    var userAgent = window.navigator.userAgent.toLowerCase();\n    \n    // If no video tag is supported, go ahead and enable all HTML5 elements.\n    if (!document.createElement(VIDEO_TAG).canPlayType) {\n        document.createElement(AUDIO_TAG);\n        document.createElement(\"source\");\n    }\n    \n    // Checks whether this is a broken Android implementation.\n    var isBrokenAndroid = userAgent.match(/android 2\\.[12]/) !== null || userAgent.match(/android 6/) !== null;\n    \n    // Checks if this is opera.\n    var isOpera = userAgent.match(/opera/) !== null;\n    \n    // Checks whether the given element can play the fiven format.\n    function canPlayFormat(element, format) {\n        return element.canPlayType(format) || (isBrokenAndroid && format.search(\"mp4\") > -1);\n    }\n    \n    // Scans over elements with the given tag name, creating fallbacks if required.\n    function scanElementsByTagName(tagName) {\n        var elements = document.getElementsByTagName(tagName);\n        var elementsList = [];\n        for (var n = 0; n < elements.length; n++) {\n            elementsList.push(elements[n]);\n        }\n        for (n = 0; n < elementsList.length; n++) {\n            var element = elementsList[n];\n            var requiresFallback = true;\n            // Test if the media tag is supported.\n            if (element.canPlayType) {\n                // If the media has a src attribute, and can play it, then all is good.\n                if (element.src) {\n                    if (canPlayFormat(element, guessFormat(tagName, element.src))) {\n                        requiresFallback = false;\n                    }\n                } else {\n                    // Check for source child attributes.\n                    var sources = element.getElementsByTagName(\"source\"); \n                    for (var m = 0; m < sources.length; m++) {\n                        var source = sources[m];\n                        if (canPlayFormat(element, guessFormat(tagName, source.src, source.type))) {\n                            requiresFallback = false;\n                            break;\n                        }\n                    }\n                }\n            }\n            // If cannot play media, create the fallback.\n            if (requiresFallback || html5media.forceFallback(tagName, element)) {\n                html5media.createFallback(tagName, element);\n            } else {\n                // HACK: Enables playback in android phones.\n                if (isBrokenAndroid) {\n                    element.addEventListener(\"click\", function() {\n                        this.play();\n                    }, false);\n                }\n            }\n        }\n    }\n    \n    /**\n     * Replaces all video tags with flowplayer video player if the browser does\n     * not support either the video tag the h.264 codex.\n     * \n     * This is run automatically on document ready, but can be run manually\n     * again after dynamically creating HTML5 video tags.\n     */\n    function html5media() {\n        scanElementsByTagName(\"video\");\n        scanElementsByTagName(\"audio\");\n    }\n    \n    /**\n     * Callback to allow conditional forcing of the fallback player.\n     * \n     * Return true to force the flash fallback. The default implementation never\n     * forces the flash fallback.\n     */\n    html5media.forceFallback = function(tagName, element) {\n        return false;\n    };\n    \n    // Removes the final filename from the given path.\n    function dirname(path) {\n        return path.split(\"/\").slice(0, -1).join(\"/\") + \"/\";\n    }\n    \n    /**\n     * The locations of the flowplayer and flowplayer controls SWF files.\n     * \n     * Override this if they are not located in the same folder as the \n     */\n    var scriptRoot = (function() {\n        var scripts = document.getElementsByTagName(\"script\");\n        for (var n = 0; n < scripts.length; n++) {\n            var script = scripts[n];\n            if (script.src.match(/html5media(\\.min|)\\.js/)) {\n                return dirname(script.src);\n            }\n        }\n        return \"\";\n    }());\n    html5media.flowplayerSwf = scriptRoot + \"flowplayer.swf\";\n    html5media.flowplayerAudioSwf = scriptRoot + \"flowplayer.audio.swf\";\n    html5media.flowplayerControlsSwf = scriptRoot + \"flowplayer.controls.swf\";\n    html5media.expressInstallSwf = scriptRoot + \"expressInstall.swf\";\n    html5media.videoFallbackClass = \"html5media-video-fallback\";\n    html5media.audioFallbackClass = \"html5media-audio-fallback\";\n    \n    // Known media formats.\n    var THEORA_FORMAT = 'video/ogg; codecs=\"theora, vorbis\"';\n    var H264_FORMAT = 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"';\n    var VORBIS_FORMAT = 'audio/ogg; codecs=\"vorbis\"';\n    var WEBM_FORMAT  = 'video/webm;';\n    var M4A_FORMAT = 'audio/x-m4a;';\n    var MP3_FORMAT = 'audio/mpeg;';\n    var WAV_FORMAT = 'audio/wav; codecs=\"1\"';\n    \n    /**\n     * The video format to assume if it cannot be determined what format a media\n     * file is.\n     */\n    var assumedFormats = {\n        video: H264_FORMAT,\n        audio: MP3_FORMAT\n    };\n    \n    /**\n     * Formats that the fallback Flash player is able to understand.\n     */\n    var fallbackFormats = [H264_FORMAT, M4A_FORMAT, MP3_FORMAT];\n    \n    /**\n     * Known file extensions that can be used to guess media formats in the\n     * absence of other information.\n     */\n    var fileExtensions = {\n        video: {\n            \"ogg\": THEORA_FORMAT,\n            \"ogv\": THEORA_FORMAT,\n            \"avi\": H264_FORMAT,\n            \"mp4\": H264_FORMAT,\n            \"mkv\": H264_FORMAT,\n            \"h264\": H264_FORMAT,\n            \"264\": H264_FORMAT,\n            \"avc\": H264_FORMAT,\n            \"m4v\": H264_FORMAT,\n            \"3gp\": H264_FORMAT,\n            \"3gpp\": H264_FORMAT,\n            \"3g2\": H264_FORMAT,\n            \"mpg\": H264_FORMAT,\n            \"mpeg\": H264_FORMAT,\n            \"webm\": WEBM_FORMAT\n        },\n        audio: {\n            \"ogg\": VORBIS_FORMAT,\n            \"oga\": VORBIS_FORMAT,\n            \"aac\": M4A_FORMAT,\n            \"m4a\": M4A_FORMAT,\n            \"mp3\": MP3_FORMAT,\n            \"wav\": WAV_FORMAT\n        }\n    };\n    \n    // Trys to determine the format of a given video file.\n    function guessFormat(tag, src, type) {\n        // An explicit type is always best.\n        if (type) {\n            return type;\n        }\n        // Try to match based on file extension.\n        var extensionMatch = (/\\.([a-z1-9]+)(\\?|#|\\s|$)/i).exec(src);\n        if (extensionMatch) {\n            var format = fileExtensions[tag][extensionMatch[1]];\n            if (format) {\n                return format;\n            }\n        }\n        return assumedFormats[tag];\n    }\n    \n    // Detects presence of HTML5 attributes.\n    function hasAttr(element, attr) {\n        var val = element.getAttribute(attr);\n        return !!val || typeof val == \"string\";\n    }\n    \n    // Standardizes URLs to avoid confusing Flowplayer.\n    function fixPath(url) {\n        var link = document.createElement(\"a\");\n        link.href = url;\n        return link.href;\n    }\n    \n    // Calculates the given dimension of the given element.\n    function getDimension(element, dimension, fallback) {\n        // Attempt to use it's attribute value.\n        var result = element.getAttribute(dimension);\n        if (result) {\n            return result + \"px\";\n        }\n        // Attempt to use it's computed style.\n        var style;\n        if (element.currentStyle) {\n            style = element.currentStyle[dimension];\n        } else if (window.getComputedStyle) {\n            style = document.defaultView.getComputedStyle(element, null).getPropertyValue(dimension);\n        } else {\n            return fallback;\n        }\n        if (style == \"auto\") {\n            return fallback; \n        }\n        return style;\n    }\n    \n    // Extracts the mimetype from a format string.\n    function getMimeType(format) {\n        return format.match(/\\s*([\\w-]+\\/[\\w-]+)(;|\\s|$)/)[1];\n    }\n    \n    // Checks whether the two formats are equivalent.\n    function formatMatches(format1, format2) {\n        return (getMimeType(format1) == getMimeType(format2));\n    }\n\n    /**\n     * Callback for adding custom configuration options to Flowplayer before it\n     * launches. This callback is supplied with the tagname of the element being\n     * replaced (\"video\" or \"audio\"), the element being replaced, and the\n     * generated Flowplayer configuration.\n     * \n     * This callback should return the updated Flowplayer configuration. By\n     * The default implementation leaves the generated configuration intact.\n     */\n    html5media.configureFlowplayer = function(element, config) {\n        return config;\n    };\n    \n    /**\n     * Default callback for creating a fallback for html5 media tags.\n     * \n     * This implementation creates flowplayer instances, but this can\n     * theoretically be used to support all different types of flash player.\n     */\n    html5media.createFallback = function(tagName, element) {\n        var hasControls = hasAttr(element, \"controls\");\n        // Standardize the src and poster.\n        var poster = element.getAttribute(\"poster\") || \"\";\n        var src = element.getAttribute(\"src\") || \"\";\n        if (!src) {\n            // Find a compatible fallback file.\n            var sources = element.getElementsByTagName(\"source\");\n            for (var sn = 0; sn < sources.length; sn++) {\n                var source = sources[sn];\n                var srcValue = source.getAttribute(\"src\");\n                if (srcValue) {\n                    for (var fn = 0; fn < fallbackFormats.length; fn++) {\n                        var fallbackFormat = fallbackFormats[fn];\n                        if (formatMatches(fallbackFormat, guessFormat(tagName, srcValue, source.getAttribute(\"type\")))) {\n                            src = srcValue;\n                            break;\n                        }\n                    }\n                }\n                if (src) {\n                    break;\n                }\n            }\n        }\n        // If there is no src, then fail silently for now.\n        if (!src) {\n            return;\n        }\n        // Create the replacement element div.\n        var replacement = document.createElement(\"span\");\n        replacement.id = element.id;\n        replacement.style.cssText = element.style.cssText;\n        replacement.className = element.className;\n        replacement.title = element.title;\n        if (!element.style.display) {\n            replacement.style.display = \"block\";\n        }\n        replacement.style.width = getDimension(element, \"width\", \"300px\");\n        if (tagName == \"audio\") {\n            replacement.style.height = getDimension(element, \"height\", \"26px\");\n            replacement.className = (replacement.className ? replacement.className+\" \" : \"\")+html5media.audioFallbackClass;\n        } else {\n            replacement.style.height = getDimension(element, \"height\", \"200px\");\n            replacement.className = (replacement.className ? replacement.className+\" \" : \"\")+html5media.videoFallbackClass;\n        }\n        // Replace the element with the div.\n        element.parentNode.replaceChild(replacement, element);\n        var preload = (element.getAttribute(\"preload\") || \"\").toLowerCase();\n        // Activate flowplayer.\n        var playlist = [];\n        if (poster) {\n            playlist.push({url: fixPath(poster)});\n        }\n        if (src) {\n            playlist.push({\n                url: fixPath(src),\n                autoPlay: hasAttr(element, \"autoplay\"),\n                autoBuffering: hasAttr(element, \"autobuffer\") || (hasAttr(element, \"preload\") && (preload === \"\" || preload == \"auto\")),\n                onBeforeFinish: function() {\n                    return !hasAttr(element, \"loop\");\n                }\n            });\n        }\n        // Determine which plugins should be loaded.\n        var plugins = {\n            controls: hasControls && {\n                url: fixPath(html5media.flowplayerControlsSwf),\n                opacity: 0.8,\n                backgroundColor: \"#181818\",\n                backgroundGradient: \"none\",\n                fullscreen: tagName == VIDEO_TAG,\n                autoHide: tagName == VIDEO_TAG && {\n                    fullscreenOnly: false,\n                    enabled: true,\n                    hideStyle: \"fade\",\n                    mouseOutDelay: 0\n                } || {\n                    enabled: false\n                }\n            } || null\n        };\n        // HACK: Opera cannot autohide controls, for some reason.\n        if (isOpera && plugins.controls) {\n            plugins.controls.autoHide.enabled = false;\n        }\n        // Audio-specific config.\n        if (tagName == \"audio\") {\n            // Load the audio plugin.\n            plugins.audio = {\n                url: fixPath(html5media.flowplayerAudioSwf)\n            };\n            // HACK: The Flowplayer audio plugin requires that the controls plugin is present.\n            if (!hasControls) {\n                plugins.controls = {\n                    url: fixPath(html5media.flowplayerControlsSwf),\n                    display: \"none\"\n                };\n                replacement.style.height = 0;\n            }\n            // HACK: Disable autoBuffering, since a flowplayer audio bug can cause uncontrollable autoplaying.\n            playlist[playlist.length - 1].autoBuffering = false;\n        }\n        // Load the Flowplayer.\n        var config = {\n            play: null,\n            playlist: playlist,\n            clip: {\n                scaling: \"fit\",\n                fadeInSpeed: 0,\n                fadeOutSpeed: 0\n            },\n            canvas: {\n                backgroundGradient: \"none\",\n                backgroundColor: \"#000000\"\n            },\n            plugins: plugins\n        };\n        config = html5media.configureFlowplayer(element, config);\n        flowplayer(replacement, {\n            src: fixPath(html5media.flowplayerSwf),\n            expressInstall: fixPath(html5media.expressInstallSwf),\n            wmode: \"opaque\"\n        }, config);\n    };\n\n    // Automatically execute the html5media function on page load.\n    DomReady.ready(html5media);\n    \n    // Expose html5media to the global object.\n    window.html5media = html5media;\n    \n})(this, document);\n";
export default _default;
//# sourceMappingURL=html5-media-polyfill.d.ts.map