"use strict";
/**
 * This file contains the hyperfiler options types and default hyperfiler
 * options.
 *
 * @author ChowderMan
 * @license AGPLv3
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HyperFilerPrebuiltOptions = void 0;
/**
 * The default set of HyperFiler options.
 */
const defaultOptionSet = {
    url: null,
    out: null,
    silent: false,
    removeStylesTags: false,
    removeAlternativeStylesTags: false,
    removeInlineStyles: false,
    removeStyles: false,
    addStyleCSP: false,
    removeScriptTags: false,
    removeNoscriptTags: false,
    removeInlineScripts: false,
    removeHrefScripts: false,
    removeScripts: false,
    addScriptCSP: false,
    removeImageSrcs: false,
    removeImageSrcsets: false,
    removeImageAlts: false,
    removeImageAttributes: false,
    removeCssImages: false,
    removeImages: false,
    addImageCSP: false,
    removeFrames: false,
    addFrameCSP: false,
    removeVideoSrcs: false,
    removeVideos: false,
    addVideoCSP: false,
    removeAudioSrcs: false,
    removeAudio: false,
    addAudioCSP: false,
    removeFonts: false,
    addFontCSP: false,
    removeCursors: false,
    removeFavicons: false,
    removeCanvas: false,
    removeConditionalComments: false,
    removeNonConditionalComments: false,
    removeComments: false,
    removeForms: false,
    removeFormAttributes: false,
    removeFormTagsOnly: false,
    removeNonDisplayMetaTags: false,
    removeNonDisplayLinkTags: false,
    removeMetaRefreshTag: false,
    removeNonInlineAnchorHrefs: false,
    removeAnchorHrefs: false,
    removeDefaultAttributes: false,
    removeAriaAttributes: false,
    removeDataAttributes: false,
    removeIntegrityCheckAttributes: false,
    removeEmptyNonDisplayElements: false,
    removeTrackingPixels: false,
    removeHiddenElements: false,
    removeCustomTagsByName: '',
    removeCustomTagsByCssSelector: '',
    removeUnusedCss: false,
    minifyHtml: false,
    minifyHtmlOptions: {
        caseSensitive: true,
        collapseBooleanAttributes: true,
        collapseInlineTagWhitespace: true,
        collapseWhitespace: true,
        conservativeCollapse: true,
        continueOnParseError: true,
        html5: true,
        keepClosingSlash: false,
        minifyURLs: false,
        preserveLineBreaks: false,
        removeAttributeQuotes: true,
        removeComments: true,
        removeEmptyAttributes: true,
        removeScriptTypeAttributes: true,
        removeStyleLinkTypeAttributes: true,
        trimCustomFragments: true,
        useShortDoctype: true,
    },
    minifyCss: false,
    minifyCssOptions: {
        level: {
            1: {
                cleanupCharsets: true,
                normalizeUrls: true,
                optimizeBackground: true,
                optimizeBorderRadius: true,
                optimizeFilter: true,
                optimizeFont: true,
                optimizeFontWeight: true,
                optimizeOutline: true,
                removeEmpty: true,
                removeNegativePaddings: true,
                removeQuotes: true,
                removeWhitespace: true,
                replaceMultipleZeros: true,
                replaceTimeUnits: true,
                replaceZeroUnits: true,
                roundingPrecision: false,
                selectorsSortingMethod: 'standard',
                specialComments: 'all',
                tidyAtRules: true,
                tidyBlockScopes: true,
                tidySelectors: true,
                semicolonAfterLastProperty: false,
            },
            2: {
                mergeAdjacentRules: true,
                mergeIntoShorthands: true,
                mergeMedia: true,
                mergeNonAdjacentRules: true,
                mergeSemantically: false,
                overrideProperties: true,
                removeEmpty: true,
                reduceNonAdjacentRules: true,
                removeDuplicateFontRules: true,
                removeDuplicateMediaBlocks: true,
                removeDuplicateRules: true,
                removeUnusedAtRules: false,
                restructureRules: false,
                skipProperties: [],
            },
        },
    },
    minifyJs: false,
    minifyJsOptions: {
        compress: {
            pure_funcs: [
                'Math.abs',
                'Math.acos',
                'Math.acosh',
                'Math.asin',
                'Math.asinh',
                'Math.atan',
                'Math.atanh',
                'Math.atan2',
                'Math.cbrt',
                'Math.ceil',
                'Math.clz32',
                'Math.cos',
                'Math.cosh',
                'Math.exp',
                'Math.expm1',
                'Math.floor',
                'Math.fround',
                'Math.hypot',
                'Math.imul',
                'Math.log',
                'Math.log1p',
                'Math.log10',
                'Math.log2',
                'Math.max',
                'Math.min',
                'Math.pow',
                'Math.random',
                'Math.round',
                'Math.sign',
                'Math.sin',
                'Math.sinh',
                'Math.sqrt',
                'Math.tan',
                'Math.tanh',
                'Math.trunc',
                'Number.isNaN',
                'Number.isFinite',
                'Number.isInteger',
                'Number.isSafeInteger',
                'Number.parseFloat',
                'Number.parseInt',
                'Array.from',
                'Array.isArray',
                'Array.of',
                'Date.now',
                'Date.parse',
                'Date.UTC',
                'Error.captureStackTrace',
                'JSON.parse',
                'JSON.stringify',
                'Object.assign',
                'Object.create',
                'Object.defineProperty',
                'Object.defineProperties',
                'Object.entries',
                'Object.freeze',
                'Object.fromEntries',
                'Object.getOwnPropertyDescriptor',
                'Object.getOwnPropertyDescriptors',
                'Object.getOwnPropertyNames',
                'Object.getOwnPropertySymbols',
                'Object.getPrototypeOf',
                'Object.is',
                'Object.isExtensible',
                'Object.isFrozen',
                'Object.isSealed',
                'Object.keys',
                'Object.preventExtensions',
                'Object.seal',
                'Object.setPrototypeOf',
                'Object.values',
                'String.fromCharCode',
                'String.fromCodePoint',
            ],
        },
    },
    minifyGenericTagNames: false,
    minifyClassNames: false,
    minifyIDs: false,
    minifyClassNamesAndIDsToAttributes: false,
    beautifyHtml: false,
    beautifyHtmlOptions: {
        indent_size: 2,
        indent_char: ' ',
        indent_with_tabs: false,
    },
    beautifyCss: false,
    beautifyCssOptions: {
        indent_size: 2,
        indent_char: ' ',
        indent_with_tabs: false,
    },
    beautifyJs: false,
    beautifyJsOptions: {
        indent_size: 2,
        indent_char: ' ',
        indent_with_tabs: false,
    },
    transpileEs6ToEs5: false,
    transpileEs6ToEs5Options: {},
    convertImagesToSupportedImageFormats: false,
    minifyImages: false,
    jpegQuality: 40,
    allowWebp: false,
    webpQuality: 20,
    minifyAudio: false,
    minifyVideos: false,
    minifyFonts: false,
    removeResourceMetadata: false,
    keepResourceIfLarger: true,
    grayscaleCss: false,
    grayscaleImages: false,
    grayscaleVideos: false,
    grayscale: false,
    injectCustomStyleSheet: undefined,
    injectHtml5Polyfill: false,
    injectCssFlexboxPolyfill: false,
    injectMediaQueryPolyfill: false,
    injectHtml5MediaPolyfill: false,
    injectCanvasPolyfill: false,
    injectEs5Polyfill: false,
    injectFlashPlayer: false,
    injectCompiledPage: false,
    headers: {},
    torTransport: false,
    socksProxyAgentString: 'socks5h://localhost:9150',
    headlessBrowserTransport: false,
    headlessBrowserExecutablePath: undefined,
    headlessBrowserArgs: undefined,
    plugins: {
        beforeInitialFetch: [],
        afterInitialFetch: [],
        beforePreCssInlineRemoval: [],
        afterPreCssInlineRemoval: [],
        beforeCssInlines: [],
        afterCssInlines: [],
        beforePostCssInlineRemoval: [],
        afterPostCssInlineRemoval: [],
        beforePostCssInlineResourceFetch: [],
        afterPostCssInlineResourceFetch: [],
        beforeResourceModifications: [],
        afterResourceModifications: [],
        beforeResourceInlines: [],
        afterResourceInlines: [],
        beforeFinalInlineModifications: [],
        afterFinalInlineModifications: [],
        beforeFinalHtmlCreation: [],
        afterFinalHtmlCreation: [],
    },
    sanitize: false,
    compatibility: false,
    simpleMinification: false,
    advancedMinification: false,
    hyperMinification: false,
};
/**
 * A set of options used for sanitizing an HTML file of executable and external
 * resources.
 */
const sanitizeOptionSet = {
    url: null,
    removeAlternativeStylesTags: true,
    removeScripts: true,
    addScriptCSP: true,
    removeFrames: true,
    addFrameCSP: true,
    removeCanvas: true,
    removeComments: true,
    removeFormTagsOnly: true,
    removeNonDisplayMetaTags: true,
    removeNonDisplayLinkTags: true,
    removeMetaRefreshTag: true,
    removeNonInlineAnchorHrefs: true,
    removeResourceMetadata: true,
};
/**
 * A set of options for adding shims and polyfills, transpiling code, and
 * converting other page resources into formats supported by older browsers.
 */
const compatibilityOptionSet = {
    url: null,
    convertImagesToSupportedImageFormats: true,
    transpileEs6ToEs5: true,
    injectHtml5Polyfill: true,
    injectCssFlexboxPolyfill: true,
    injectMediaQueryPolyfill: true,
    injectHtml5MediaPolyfill: true,
    injectCanvasPolyfill: true,
    injectEs5Polyfill: true,
};
/**
 * A set of options for simple page minifications that are unlikely to break
 * any page functionality or have an effect on page rendering.
 */
const simpleMinificationOptionSet = {
    url: null,
    minifyHtml: true,
    minifyCss: true,
    minifyJs: true,
};
/**
 * A set of options for advanced page minifications that may break some page
 * functionality or have an effect on page rendering.
 */
const advancedMinificationOptionSet = {
    url: null,
    removeNonConditionalComments: true,
    removeDefaultAttributes: true,
    removeUnusedCss: true,
    removeEmptyNonDisplayElements: true,
    minifyGenericTagNames: true,
    minifyClassNamesAndIDsToAttributes: true,
    minifyImages: true,
    minifyAudio: true,
    minifyVideos: true,
    minifyFonts: true,
    removeResourceMetadata: true,
    keepResourceIfLarger: false,
};
/**
 * A set of options for hyper page minification that will very likely break
 * page functionality and have an effect on page rendering.
 */
const hyperMinificationOptionSet = {
    url: null,
    addScriptCSP: false,
    addFrameCSP: false,
    removeImageAlts: true,
    removeImageSrcsets: true,
    removeFonts: true,
    removeCursors: true,
    removeAriaAttributes: true,
    removeDataAttributes: true,
    removeIntegrityCheckAttributes: true,
    removeTrackingPixels: true,
    removeHiddenElements: true,
    allowWebp: true,
    injectCompiledPage: true,
};
/**
 * Various prebuilt options for running HyperFiler. Option sets are combined
 * here to create higher order HyperFiler functionality.
 */
exports.HyperFilerPrebuiltOptions = {
    DEFAULT: Object.assign({}, defaultOptionSet),
    SANITIZE: Object.assign(Object.assign({}, defaultOptionSet), sanitizeOptionSet),
    COMPATIBILITY: Object.assign(Object.assign({}, defaultOptionSet), compatibilityOptionSet),
    SIMPLE_MINIFICATION: Object.assign(Object.assign({}, defaultOptionSet), simpleMinificationOptionSet),
    ADVANCED_MINIFICATION: Object.assign(Object.assign(Object.assign({}, defaultOptionSet), simpleMinificationOptionSet), advancedMinificationOptionSet),
    HYPER_MINIFICATION: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, defaultOptionSet), sanitizeOptionSet), simpleMinificationOptionSet), advancedMinificationOptionSet), hyperMinificationOptionSet),
};
//# sourceMappingURL=hyperfiler-options.js.map